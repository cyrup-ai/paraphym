    Checking pingora-error v0.6.0 (/Volumes/samsung_t9/paraphym/forks/pingora/pingora-error)
    Checking pingora-timeout v0.6.0 (/Volumes/samsung_t9/paraphym/forks/pingora/pingora-timeout)
    Checking sweet_mcp_type v0.1.0 (/Volumes/samsung_t9/paraphym/packages/sweetmcp/packages/sweet-mcp-type)
    Checking pingora-runtime v0.6.0 (/Volumes/samsung_t9/paraphym/forks/pingora/pingora-runtime)
    Checking paraphym_simd v0.1.0 (/Volumes/samsung_t9/paraphym/packages/simd)
    Checking pingora-lru v0.6.0 (/Volumes/samsung_t9/paraphym/forks/pingora/pingora-lru)
    Checking cylo v0.1.0 (/Volumes/samsung_t9/paraphym/packages/cylo)
    Checking pingora-ketama v0.6.0 (/Volumes/samsung_t9/paraphym/forks/pingora/pingora-ketama)
   Compiling sweetmcp-pingora v0.3.1 (/Volumes/samsung_t9/paraphym/packages/sweetmcp/packages/pingora)
    Checking pingora-http v0.6.0 (/Volumes/samsung_t9/paraphym/forks/pingora/pingora-http)
    Checking pingora-pool v0.6.0 (/Volumes/samsung_t9/paraphym/forks/pingora/pingora-pool)
    Checking pingora-rustls v0.6.0 (/Volumes/samsung_t9/paraphym/forks/pingora/pingora-rustls)
    Checking pingora-limits v0.6.0 (/Volumes/samsung_t9/paraphym/forks/pingora/pingora-limits)
   Compiling sweetmcp-daemon v0.2.0 (/Volumes/samsung_t9/paraphym/packages/sweetmcp/packages/daemon)
    Checking sweetmcp-client-autoconfig v0.1.0 (/Volumes/samsung_t9/paraphym/packages/sweetmcp/packages/autoconfig)
   Compiling sweetmcp-capnp-client v0.1.0 (/Volumes/samsung_t9/paraphym/packages/sweetmcp/packages/capnp-client)
    Checking sweetmcp-plugin-builder v0.1.0 (/Volumes/samsung_t9/paraphym/packages/sweetmcp/packages/plugin-builder)
    Checking pingora-openssl v0.6.0 (/Volumes/samsung_t9/paraphym/forks/pingora/pingora-openssl)
    Checking pingora-boringssl v0.6.0 (/Volumes/samsung_t9/paraphym/forks/pingora/pingora-boringssl)
    Checking pingora-header-serde v0.6.0 (/Volumes/samsung_t9/paraphym/forks/pingora/pingora-header-serde)
    Checking mcp-client-traits v0.1.0 (/Volumes/samsung_t9/paraphym/packages/sweetmcp/packages/mcp-client-traits)
    Checking pingora-core v0.6.0 (/Volumes/samsung_t9/paraphym/forks/pingora/pingora-core)
    Checking sweetmcp-voice-tools v0.1.0 (/Volumes/samsung_t9/paraphym/packages/sweetmcp/packages/voice-tools)
    Checking sweetmcp-json-client v0.1.0 (/Volumes/samsung_t9/paraphym/packages/sweetmcp/packages/json-client)
    Checking sweetmcp-stdio-client v0.1.0 (/Volumes/samsung_t9/paraphym/packages/sweetmcp/packages/stdio-client)
    Checking sweetmcp-graphql-client v0.1.0 (/Volumes/samsung_t9/paraphym/packages/sweetmcp/packages/graphql-client)
    Checking sweetmcp-sse-client v0.1.0 (/Volumes/samsung_t9/paraphym/packages/sweetmcp/packages/sse-client)
    Checking paraphym_candle v0.1.0 (/Volumes/samsung_t9/paraphym/packages/candle)
    Checking pingora-cache v0.6.0 (/Volumes/samsung_t9/paraphym/forks/pingora/pingora-cache)
    Checking pingora-load-balancing v0.6.0 (/Volumes/samsung_t9/paraphym/forks/pingora/pingora-load-balancing)
    Checking pingora-proxy v0.6.0 (/Volumes/samsung_t9/paraphym/forks/pingora/pingora-proxy)
    Checking pingora v0.6.0 (/Volumes/samsung_t9/paraphym/forks/pingora/pingora)
error: type alias `EmbeddingFuture` is never used
  --> packages/candle/src/capability/traits.rs:24:6
   |
24 | type EmbeddingFuture<'a> = Pin<
   |      ^^^^^^^^^^^^^^^
   |
   = note: `-D dead-code` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(dead_code)]`

error: type alias `BatchEmbeddingFuture` is never used
  --> packages/candle/src/capability/traits.rs:34:6
   |
34 | type BatchEmbeddingFuture<'a> = Pin<
   |      ^^^^^^^^^^^^^^^^^^^^

error: very complex type used. Consider factoring parts into `type` definitions
  --> packages/candle/src/capability/traits.rs:70:10
   |
70 |       ) -> std::pin::Pin<
   |  __________^
71 | |         Box<
72 | |             dyn std::future::Future<
73 | |                     Output = std::result::Result<
...  |
79 | |         >,
80 | |     >;
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity
   = note: `-D clippy::type-complexity` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(clippy::type_complexity)]`

error: very complex type used. Consider factoring parts into `type` definitions
  --> packages/candle/src/capability/traits.rs:87:10
   |
87 |       ) -> std::pin::Pin<
   |  __________^
88 | |         Box<
89 | |             dyn std::future::Future<
90 | |                     Output = std::result::Result<
...  |
96 | |         >,
97 | |     >;
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity

error: very complex type used. Consider factoring parts into `type` definitions
   --> packages/candle/src/capability/traits.rs:210:10
    |
210 |       ) -> std::pin::Pin<
    |  __________^
211 | |         Box<
212 | |             dyn std::future::Future<
213 | |                     Output = std::result::Result<
...   |
219 | |         >,
220 | |     > {
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity

error: very complex type used. Consider factoring parts into `type` definitions
   --> packages/candle/src/capability/traits.rs:243:10
    |
243 |       ) -> std::pin::Pin<
    |  __________^
244 | |         Box<
245 | |             dyn std::future::Future<
246 | |                     Output = std::result::Result<
...   |
252 | |         >,
253 | |     >;
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity

error: very complex type used. Consider factoring parts into `type` definitions
   --> packages/candle/src/capability/traits.rs:259:10
    |
259 |       ) -> std::pin::Pin<
    |  __________^
260 | |         Box<
261 | |             dyn std::future::Future<
262 | |                     Output = std::result::Result<
...   |
268 | |         >,
269 | |     >;
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity

error: very complex type used. Consider factoring parts into `type` definitions
   --> packages/candle/src/capability/traits.rs:275:10
    |
275 |       ) -> std::pin::Pin<
    |  __________^
276 | |         Box<
277 | |             dyn std::future::Future<
278 | |                     Output = std::result::Result<
...   |
284 | |         >,
285 | |     >;
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity

error: very complex type used. Consider factoring parts into `type` definitions
   --> packages/candle/src/capability/traits.rs:291:10
    |
291 |       ) -> std::pin::Pin<
    |  __________^
292 | |         Box<
293 | |             dyn std::future::Future<
294 | |                     Output = std::result::Result<
...   |
300 | |         >,
301 | |     >;
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity

error: very complex type used. Consider factoring parts into `type` definitions
   --> packages/candle/src/domain/chat/formatting.rs:881:10
    |
881 |     ) -> FormatResult<(Self, Pin<Box<dyn Stream<Item = FormattingEvent> + Send>>)> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity
note: the lint level is defined here
   --> packages/candle/src/domain/mod.rs:9:9
    |
  9 | #![deny(clippy::all)]
    |         ^^^^^^^^^^^
    = note: `#[deny(clippy::type_complexity)]` implied by `#[deny(clippy::all)]`

error: this function has a `#[must_use]` attribute with no message, but returns a type already marked as `#[must_use]`
  --> packages/candle/src/domain/chat/message/message_processing.rs:44:1
   |
44 | pub fn process_message(message: CandleMessage) -> impl tokio_stream::Stream<Item = CandleMessage> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: either add some descriptive message or remove the attribute
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#double_must_use
   = note: `#[deny(clippy::double_must_use)]` implied by `#[deny(clippy::all)]`

error: this function has a `#[must_use]` attribute with no message, but returns a type already marked as `#[must_use]`
  --> packages/candle/src/domain/chat/message/message_processing.rs:80:1
   |
80 | pub fn validate_message(message: CandleMessage) -> impl tokio_stream::Stream<Item = CandleMessage> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: either add some descriptive message or remove the attribute
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#double_must_use

error: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`
   --> packages/candle/src/domain/chat/realtime/streaming.rs:556:25
    |
556 | /                         match tokio::time::timeout(Duration::from_micros(100), rx.recv()).await {
557 | |                             Ok(Some(normal_msg)) => {
558 | |                                 message_counter.fetch_sub(1, Ordering::AcqRel);
559 | |                                 message = Some(normal_msg);
560 | |                             }
561 | |                             _ => {}
562 | |                         }
    | |_________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
    = note: `#[deny(clippy::single_match)]` implied by `#[deny(clippy::all)]`
help: try
    |
556 ~                         if let Ok(Some(normal_msg)) = tokio::time::timeout(Duration::from_micros(100), rx.recv()).await {
557 +                             message_counter.fetch_sub(1, Ordering::AcqRel);
558 +                             message = Some(normal_msg);
559 +                         }
    |

error: this function has too many lines (105/100)
  --> packages/candle/src/domain/chat/templates/parser.rs:71:5
   |
71 |     fn parse_with_depth(&self, content: &str, depth: usize) -> TemplateResult<TemplateAst> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_lines
note: the lint level is defined here
  --> packages/candle/src/domain/mod.rs:10:9
   |
10 | #![deny(clippy::pedantic)]
   |         ^^^^^^^^^^^^^^^^
   = note: `#[deny(clippy::too_many_lines)]` implied by `#[deny(clippy::pedantic)]`

error: this function has a `#[must_use]` attribute with no message, but returns a type already marked as `#[must_use]`
   --> packages/candle/src/domain/concurrency/mod.rs:156:5
    |
156 |     pub fn recv_status(&self) -> impl Stream<Item = ChannelResult> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: either add some descriptive message or remove the attribute
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#double_must_use

error: this function has a `#[must_use]` attribute with no message, but returns a type already marked as `#[must_use]`
   --> packages/candle/src/domain/concurrency/mod.rs:172:5
    |
172 |     pub fn subscribe(&self) -> impl Stream<Item = T> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: either add some descriptive message or remove the attribute
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#double_must_use

error: unnecessary map of the identity function
   --> packages/candle/src/domain/concurrency/mod.rs:211:31
    |
211 |             sender.send(value).map_err(|value| value)
    |                               ^^^^^^^^^^^^^^^^^^^^^^^ help: remove the call to `map_err`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_identity
    = note: `#[deny(clippy::map_identity)]` implied by `#[deny(clippy::all)]`

error: this function has a `#[must_use]` attribute with no message, but returns a type already marked as `#[must_use]`
   --> packages/candle/src/domain/concurrency/mod.rs:219:5
    |
219 |     pub fn recv(self) -> impl Stream<Item = OneshotResult<T>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: either add some descriptive message or remove the attribute
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#double_must_use

error: very complex type used. Consider factoring parts into `type` definitions
   --> packages/candle/src/domain/init/globals.rs:102:29
    |
102 | ...L: LazyLock<(mpsc::UnboundedSender<Arc<SurrealDBMemoryManager>>, Arc<Mutex<mpsc::UnboundedReceiver<Arc<SurrealDBMemoryManager>>>>)> =
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity

error: very complex type used. Consider factoring parts into `type` definitions
  --> packages/candle/src/domain/init/mod.rs:87:29
   |
87 | ...L: LazyLock<(mpsc::UnboundedSender<Arc<SurrealDBMemoryManager>>, Arc<Mutex<mpsc::UnboundedReceiver<Arc<SurrealDBMemoryManager>>>>)> =
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity

error: very complex type used. Consider factoring parts into `type` definitions
  --> packages/candle/src/domain/memory/tool.rs:39:22
   |
39 | static RESULT_QUEUE: LazyLock<(mpsc::UnboundedSender<MemoryNode>, Arc<Mutex<mpsc::UnboundedReceiver<MemoryNode>>>)> = LazyLock::new(|| {
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity

error: very complex type used. Consider factoring parts into `type` definitions
  --> packages/candle/src/pool/capabilities/text_to_image.rs:21:19
   |
21 |     pub response: oneshot::Sender<Result<Pin<Box<dyn Stream<Item = ImageGenerationChunk> + Send>>, PoolError>>,
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity

error: very complex type used. Consider factoring parts into `type` definitions
  --> packages/candle/src/pool/capabilities/text_to_text.rs:21:19
   |
21 |     pub response: oneshot::Sender<Result<Pin<Box<dyn Stream<Item = CandleCompletionChunk> + Send>>, PoolError>>,
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity

error: very complex type used. Consider factoring parts into `type` definitions
  --> packages/candle/src/pool/capabilities/vision.rs:19:19
   |
19 |     pub response: oneshot::Sender<Result<Pin<Box<dyn Stream<Item = CandleStringChunk> + Send>>, PoolError>>,
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity

error: very complex type used. Consider factoring parts into `type` definitions
  --> packages/candle/src/pool/capabilities/vision.rs:26:19
   |
26 |     pub response: oneshot::Sender<Result<Pin<Box<dyn Stream<Item = CandleStringChunk> + Send>>, PoolError>>,
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity

error: this `MutexGuard` is held across an await point
   --> packages/candle/src/pool/core/memory_governor.rs:317:13
    |
317 |         let mut allocations = self.allocations.write();
    |             ^^^^^^^^^^^^^^^
    |
    = help: consider using an async-aware `Mutex` type or ensuring the `MutexGuard` is dropped before calling `await`
note: these are all the await points this lock is held through
   --> packages/candle/src/pool/core/memory_governor.rs:323:45
    |
323 |             numa_node: self.get_numa_node().await,
    |                                             ^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#await_holding_lock
    = note: `-D clippy::await-holding-lock` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(clippy::await_holding_lock)]`

error: could not compile `paraphym_candle` (lib) due to 26 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `paraphym_candle` (lib test) due to 26 previous errors
