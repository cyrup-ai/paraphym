   Compiling sweetmcp-pingora v0.3.1 (/Volumes/samsung_t9/paraphym/packages/sweetmcp/packages/pingora)
    Checking paraphym_candle v0.1.0 (/Volumes/samsung_t9/paraphym/packages/candle)
    Checking sweetmcp-daemon v0.2.0 (/Volumes/samsung_t9/paraphym/packages/sweetmcp/packages/daemon)
error: you should consider adding a `Default` implementation for `ShellExecutor`
  --> packages/sweetmcp/packages/daemon/src/security/shell_executor.rs:30:5
   |
30 | /     pub fn new() -> Self {
31 | |         let mut blocked_patterns = Vec::new();
...  |
62 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default
   = note: `-D clippy::new-without-default` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(clippy::new_without_default)]`
help: try adding this
   |
29 + impl Default for ShellExecutor {
30 +     fn default() -> Self {
31 +         Self::new()
32 +     }
33 + }
   |

error: returning the result of a `let` binding from a block
   --> packages/sweetmcp/packages/daemon/src/security/shell_executor.rs:114:13
    |
113 |             let output = child.wait_with_output();
    |             -------------------------------------- unnecessary `let` binding
114 |             output
    |             ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
    = note: `-D clippy::let-and-return` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(clippy::let_and_return)]`
help: return the expression directly
    |
113 ~             
114 ~             child.wait_with_output()
    |

error: could not compile `sweetmcp-daemon` (lib) due to 2 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `sweetmcp-daemon` (lib test) due to 2 previous errors
