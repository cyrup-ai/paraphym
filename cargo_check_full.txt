    Checking cyrup_candle v0.1.0 (/Volumes/samsung_t9/cyrup/packages/candle)
   Compiling sweetmcp-pingora v0.3.1 (/Volumes/samsung_t9/cyrup/packages/sweetmcp/packages/pingora)
error[E0412]: cannot find type `CandleAgentRoleAgent` in this scope
  --> packages/candle/src/domain/chat/session.rs:50:72
   |
50 | type OnConversationTurnHandler = Arc<dyn Fn(&CandleAgentConversation, &CandleAgentRoleAgent) -> BoxFuture<'static, Pin<Box<dyn Stream<Ite...
   |                                                                        ^^^^^^^^^^^^^^^^^^^^ not found in this scope
   |
help: consider importing one of these structs
   |
 3 + use crate::builders::agent_role::CandleAgentRoleAgent;
   |
 3 + use crate::domain::agent::CandleAgentRoleAgent;
   |

error[E0412]: cannot find type `SweetMcpRouter` in this scope
   --> packages/candle/src/domain/chat/session.rs:148:13
    |
148 | ) -> Option<SweetMcpRouter> {
    |             ^^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing this struct through its public re-export
    |
  3 + use crate::SweetMcpRouter;
    |

error[E0422]: cannot find struct, variant or union type `PluginConfig` in this scope
   --> packages/candle/src/domain/chat/session.rs:162:33
    |
162 |     let default_plugin_config = PluginConfig {
    |                                 ^^^^^^^^^^^^ not found in this scope
    |
help: consider importing this struct
    |
  3 + use crate::domain::tool::router::PluginConfig;
    |

error[E0433]: failed to resolve: use of undeclared type `SweetMcpRouter`
   --> packages/candle/src/domain/chat/session.rs:170:22
    |
170 |     let mut router = SweetMcpRouter::with_configs(plugin_configs, None);
    |                      ^^^^^^^^^^^^^^ use of undeclared type `SweetMcpRouter`
    |
help: consider importing this struct through its public re-export
    |
  3 + use crate::SweetMcpRouter;
    |

error[E0412]: cannot find type `CandleCompletionChunk` in this scope
   --> packages/candle/src/domain/chat/session.rs:330:50
    |
330 |     completion_stream: Pin<Box<dyn Stream<Item = CandleCompletionChunk> + Send>>,
    |                                                  ^^^^^^^^^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing this enum through its public re-export
    |
  3 + use crate::domain::context::CandleCompletionChunk;
    |

error[E0412]: cannot find type `SweetMcpRouter` in this scope
   --> packages/candle/src/domain/chat/session.rs:333:26
    |
333 |     tool_router: Option<&SweetMcpRouter>,
    |                          ^^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing this struct through its public re-export
    |
  3 + use crate::SweetMcpRouter;
    |

error[E0433]: failed to resolve: use of undeclared type `CandleCompletionChunk`
   --> packages/candle/src/domain/chat/session.rs:342:13
    |
342 |             CandleCompletionChunk::Text(ref text) => {
    |             ^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `CandleCompletionChunk`
    |
help: consider importing this enum through its public re-export
    |
  3 + use crate::domain::context::CandleCompletionChunk;
    |

error[E0433]: failed to resolve: use of undeclared type `CandleCompletionChunk`
   --> packages/candle/src/domain/chat/session.rs:346:13
    |
346 |             CandleCompletionChunk::Complete {
    |             ^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `CandleCompletionChunk`
    |
help: consider importing this enum through its public re-export
    |
  3 + use crate::domain::context::CandleCompletionChunk;
    |

error[E0433]: failed to resolve: use of undeclared type `CandleCompletionChunk`
   --> packages/candle/src/domain/chat/session.rs:374:13
    |
374 |             CandleCompletionChunk::ToolCallStart { id, name } => {
    |             ^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `CandleCompletionChunk`
    |
help: consider importing this enum through its public re-export
    |
  3 + use crate::domain::context::CandleCompletionChunk;
    |

error[E0433]: failed to resolve: use of undeclared type `CandleCompletionChunk`
   --> packages/candle/src/domain/chat/session.rs:377:13
    |
377 |             CandleCompletionChunk::ToolCall {
    |             ^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `CandleCompletionChunk`
    |
help: consider importing this enum through its public re-export
    |
  3 + use crate::domain::context::CandleCompletionChunk;
    |

error[E0433]: failed to resolve: use of undeclared type `CandleCompletionChunk`
   --> packages/candle/src/domain/chat/session.rs:386:13
    |
386 |             CandleCompletionChunk::ToolCallComplete { id: _, name, input } => {
    |             ^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `CandleCompletionChunk`
    |
help: consider importing this enum through its public re-export
    |
  3 + use crate::domain::context::CandleCompletionChunk;
    |

error[E0433]: failed to resolve: use of undeclared type `CandleCompletionChunk`
   --> packages/candle/src/domain/chat/session.rs:389:13
    |
389 |             CandleCompletionChunk::Error(error) => CandleMessageChunk::Error(error),
    |             ^^^^^^^^^^^^^^^^^^^^^ use of undeclared type `CandleCompletionChunk`
    |
help: consider importing this enum through its public re-export
    |
  3 + use crate::domain::context::CandleCompletionChunk;
    |

error[E0433]: failed to resolve: use of undeclared type `CandleAgentRoleAgent`
   --> packages/candle/src/domain/chat/session.rs:527:21
    |
527 |         let agent = CandleAgentRoleAgent::new(builder_state);
    |                     ^^^^^^^^^^^^^^^^^^^^ use of undeclared type `CandleAgentRoleAgent`
    |
help: consider importing one of these structs
    |
  3 + use crate::builders::agent_role::CandleAgentRoleAgent;
    |
  3 + use crate::domain::agent::CandleAgentRoleAgent;
    |

error[E0412]: cannot find type `SweetMcpRouter` in this scope
   --> packages/candle/src/domain/chat/session.rs:540:26
    |
540 |     tool_router: Option<&SweetMcpRouter>,
    |                          ^^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing this struct through its public re-export
    |
  3 + use crate::SweetMcpRouter;
    |

error[E0433]: failed to resolve: use of undeclared type `CandlePrompt`
   --> packages/candle/src/domain/chat/session.rs:612:18
    |
612 |     let prompt = CandlePrompt::new(full_prompt);
    |                  ^^^^^^^^^^^^ use of undeclared type `CandlePrompt`
    |
help: consider importing one of these items
    |
  3 + use crate::domain::prompt::CandlePrompt;
    |
  3 + use crate::prompt::CandlePrompt;
    |

error[E0422]: cannot find struct, variant or union type `CandleCompletionParams` in this scope
   --> packages/candle/src/domain/chat/session.rs:613:22
    |
613 |     let mut params = CandleCompletionParams {
    |                      ^^^^^^^^^^^^^^^^^^^^^^ not found in this scope
    |
help: consider importing this struct through its public re-export
    |
  3 + use crate::domain::completion::CandleCompletionParams;
    |

warning: unused imports: `CircuitBreakerError` and `CircuitBreakerState`
  --> packages/candle/src/domain/error/breaker.rs:81:46
   |
81 | use super::circuit_breaker::{CircuitBreaker, CircuitBreakerState, CircuitBreakerError};
   |                                              ^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` (part of `#[warn(unused)]`) on by default

error[E0308]: `if` and `else` have incompatible types
   --> packages/candle/src/cli/runner.rs:115:13
    |
 94 |             let agent = if let Some(registry_key) = &self.args.model {
    |  _______________________-
 95 | |               use crate::capability::registry::{self, TextToTextModel};
 96 | |
 97 | |               let text_model = registry::get::<TextToTextModel>(registry_key)
...   |
100 | | /             agent_builder
101 | | |                 .model(text_model)
102 | | |                 .temperature(self.args.temperature)
103 | | |                 .system_prompt(system_prompt.clone())
...   | |
106 | | |                 .on_chunk(|chunk| async move {
    | | |                           ------- ---------- the expected `async` block
    | | |                           |
    | | |                           the expected closure
...   | |
112 | | |                     chunk
113 | | |                 })
    | | |__________________- expected because of this
114 | |           } else {
115 | | /             agent_builder
116 | | |                 .temperature(self.args.temperature)
117 | | |                 .system_prompt(system_prompt.clone())
118 | | |                 .memory_read_timeout(self.args.memory_read_timeout)
...   | |
126 | | |                     chunk
127 | | |                 })
    | | |__________________^ expected `agent_role::traits::CandleAgentBuilder::model::{anon_assoc#0}`, found `agent_role::traits::CandleAgentRoleBuilder::into_agent::{anon_assoc#0}`
128 | |           };
    | |___________- `if` and `else` have incompatible types
    |
   ::: packages/candle/src/builders/agent_role/helpers.rs:336:51
    |
336 |         pub fn agent_role(name: impl Into<String>) -> impl CandleAgentRoleBuilder {
    |                                                       ---------------------------
    |                                                       |
    |                                                       the expected opaque type
    |                                                       the found opaque type
    |
    = note: expected associated type `impl agent_role::traits::CandleAgentBuilder`
               found associated type `impl agent_role::traits::CandleAgentBuilder`
    = note: an associated type was expected, but a different one was found

error[E0282]: type annotations needed
   --> packages/candle/src/domain/chat/session.rs:528:13
    |
528 |         let handler_stream = handler(&conversation, &agent).await;
    |             ^^^^^^^^^^^^^^
529 |         tokio::pin!(handler_stream);
530 |         while let Some(chunk) = handler_stream.next().await {
    |                                                ---- type must be known at this point
    |
help: consider giving `handler_stream` an explicit type
    |
528 |         let handler_stream: /* Type */ = handler(&conversation, &agent).await;
    |                           ++++++++++++

error[E0282]: type annotations needed
   --> packages/candle/src/domain/chat/session.rs:622:43
    |
622 |         let auto_generated_tools = router.get_available_tools().await;
    |                                           ^^^^^^^^^^^^^^^^^^^ cannot infer type

warning: impl trait in impl method signature does not match trait method signature
   --> packages/candle/src/builders/agent_role/chat/mod.rs:19:47
    |
 19 |     fn model(self, model: TextToTextModel) -> Self {
    |                                               ^^^^
    |
   ::: packages/candle/src/builders/agent_role/traits.rs:128:47
    |
128 |     fn model(self, model: TextToTextModel) -> impl CandleAgentBuilder;
    |                                               ----------------------- return type from trait method defined here
    |
    = note: add `#[allow(refining_impl_trait)]` if it is intended for this to be part of the public API of this crate
    = note: we are soliciting feedback, see issue #121718 <https://github.com/rust-lang/rust/issues/121718> for more information
    = note: `#[warn(refining_impl_trait_reachable)]` (part of `#[warn(refining_impl_trait)]`) on by default
help: replace the return type so that it matches the trait
    |
 19 -     fn model(self, model: TextToTextModel) -> Self {
 19 +     fn model(self, model: TextToTextModel) -> impl agent_role::traits::CandleAgentBuilder {
    |

warning: impl trait in impl method signature does not match trait method signature
   --> packages/candle/src/builders/agent_role/chat/mod.rs:23:60
    |
 23 |     fn embedding_model(self, model: TextEmbeddingModel) -> Self {
    |                                                            ^^^^
    |
   ::: packages/candle/src/builders/agent_role/traits.rs:132:60
    |
132 |     fn embedding_model(self, model: TextEmbeddingModel) -> impl CandleAgentBuilder;
    |                                                            ----------------------- return type from trait method defined here
    |
    = note: add `#[allow(refining_impl_trait)]` if it is intended for this to be part of the public API of this crate
    = note: we are soliciting feedback, see issue #121718 <https://github.com/rust-lang/rust/issues/121718> for more information
help: replace the return type so that it matches the trait
    |
 23 -     fn embedding_model(self, model: TextEmbeddingModel) -> Self {
 23 +     fn embedding_model(self, model: TextEmbeddingModel) -> impl agent_role::traits::CandleAgentBuilder {
    |

warning: impl trait in impl method signature does not match trait method signature
   --> packages/candle/src/builders/agent_role/chat/mod.rs:27:40
    |
 27 |     fn temperature(self, temp: f64) -> Self {
    |                                        ^^^^
    |
   ::: packages/candle/src/builders/agent_role/traits.rs:136:40
    |
136 |     fn temperature(self, temp: f64) -> impl CandleAgentBuilder;
    |                                        ----------------------- return type from trait method defined here
    |
    = note: add `#[allow(refining_impl_trait)]` if it is intended for this to be part of the public API of this crate
    = note: we are soliciting feedback, see issue #121718 <https://github.com/rust-lang/rust/issues/121718> for more information
help: replace the return type so that it matches the trait
    |
 27 -     fn temperature(self, temp: f64) -> Self {
 27 +     fn temperature(self, temp: f64) -> impl agent_role::traits::CandleAgentBuilder {
    |

warning: impl trait in impl method signature does not match trait method signature
   --> packages/candle/src/builders/agent_role/chat/mod.rs:31:38
    |
 31 |     fn max_tokens(self, max: u64) -> Self {
    |                                      ^^^^
    |
   ::: packages/candle/src/builders/agent_role/traits.rs:140:38
    |
140 |     fn max_tokens(self, max: u64) -> impl CandleAgentBuilder;
    |                                      ----------------------- return type from trait method defined here
    |
    = note: add `#[allow(refining_impl_trait)]` if it is intended for this to be part of the public API of this crate
    = note: we are soliciting feedback, see issue #121718 <https://github.com/rust-lang/rust/issues/121718> for more information
help: replace the return type so that it matches the trait
    |
 31 -     fn max_tokens(self, max: u64) -> Self {
 31 +     fn max_tokens(self, max: u64) -> impl agent_role::traits::CandleAgentBuilder {
    |

warning: impl trait in impl method signature does not match trait method signature
   --> packages/candle/src/builders/agent_role/chat/mod.rs:35:56
    |
 35 |     fn stop_sequences(self, sequences: Vec<String>) -> Self {
    |                                                        ^^^^
    |
   ::: packages/candle/src/builders/agent_role/traits.rs:144:56
    |
144 |     fn stop_sequences(self, sequences: Vec<String>) -> impl CandleAgentBuilder;
    |                                                        ----------------------- return type from trait method defined here
    |
    = note: add `#[allow(refining_impl_trait)]` if it is intended for this to be part of the public API of this crate
    = note: we are soliciting feedback, see issue #121718 <https://github.com/rust-lang/rust/issues/121718> for more information
help: replace the return type so that it matches the trait
    |
 35 -     fn stop_sequences(self, sequences: Vec<String>) -> Self {
 35 +     fn stop_sequences(self, sequences: Vec<String>) -> impl agent_role::traits::CandleAgentBuilder {
    |

warning: impl trait in impl method signature does not match trait method signature
   --> packages/candle/src/builders/agent_role/chat/mod.rs:39:64
    |
 39 |     fn add_stop_sequence(self, sequence: impl Into<String>) -> Self {
    |                                                                ^^^^
    |
   ::: packages/candle/src/builders/agent_role/traits.rs:148:64
    |
148 |     fn add_stop_sequence(self, sequence: impl Into<String>) -> impl CandleAgentBuilder;
    |                                                                ----------------------- return type from trait method defined here
    |
    = note: add `#[allow(refining_impl_trait)]` if it is intended for this to be part of the public API of this crate
    = note: we are soliciting feedback, see issue #121718 <https://github.com/rust-lang/rust/issues/121718> for more information
help: replace the return type so that it matches the trait
    |
 39 -     fn add_stop_sequence(self, sequence: impl Into<String>) -> Self {
 39 +     fn add_stop_sequence(self, sequence: impl Into<String>) -> impl agent_role::traits::CandleAgentBuilder {
    |

warning: impl trait in impl method signature does not match trait method signature
   --> packages/candle/src/builders/agent_role/chat/mod.rs:43:54
    |
 43 |     fn memory_read_timeout(self, timeout_ms: u64) -> Self {
    |                                                      ^^^^
    |
   ::: packages/candle/src/builders/agent_role/traits.rs:152:54
    |
152 |     fn memory_read_timeout(self, timeout_ms: u64) -> impl CandleAgentBuilder;
    |                                                      ----------------------- return type from trait method defined here
    |
    = note: add `#[allow(refining_impl_trait)]` if it is intended for this to be part of the public API of this crate
    = note: we are soliciting feedback, see issue #121718 <https://github.com/rust-lang/rust/issues/121718> for more information
help: replace the return type so that it matches the trait
    |
 43 -     fn memory_read_timeout(self, timeout_ms: u64) -> Self {
 43 +     fn memory_read_timeout(self, timeout_ms: u64) -> impl agent_role::traits::CandleAgentBuilder {
    |

warning: impl trait in impl method signature does not match trait method signature
   --> packages/candle/src/builders/agent_role/chat/mod.rs:47:58
    |
 47 |     fn system_prompt(self, prompt: impl Into<String>) -> Self {
    |                                                          ^^^^
    |
   ::: packages/candle/src/builders/agent_role/traits.rs:156:58
    |
156 |     fn system_prompt(self, prompt: impl Into<String>) -> impl CandleAgentBuilder;
    |                                                          ----------------------- return type from trait method defined here
    |
    = note: add `#[allow(refining_impl_trait)]` if it is intended for this to be part of the public API of this crate
    = note: we are soliciting feedback, see issue #121718 <https://github.com/rust-lang/rust/issues/121718> for more information
help: replace the return type so that it matches the trait
    |
 47 -     fn system_prompt(self, prompt: impl Into<String>) -> Self {
 47 +     fn system_prompt(self, prompt: impl Into<String>) -> impl agent_role::traits::CandleAgentBuilder {
    |

warning: impl trait in impl method signature does not match trait method signature
   --> packages/candle/src/builders/agent_role/chat/mod.rs:51:51
    |
 51 |     fn additional_params<P2>(self, params: P2) -> Self
    |                                                   ^^^^
    |
   ::: packages/candle/src/builders/agent_role/traits.rs:160:51
    |
160 |     fn additional_params<P2>(self, params: P2) -> impl CandleAgentBuilder
    |                                                   ----------------------- return type from trait method defined here
    |
    = note: add `#[allow(refining_impl_trait)]` if it is intended for this to be part of the public API of this crate
    = note: we are soliciting feedback, see issue #121718 <https://github.com/rust-lang/rust/issues/121718> for more information
help: replace the return type so that it matches the trait
    |
 51 -     fn additional_params<P2>(self, params: P2) -> Self
 51 +     fn additional_params<P2>(self, params: P2) -> impl agent_role::traits::CandleAgentBuilder
    |

warning: impl trait in impl method signature does not match trait method signature
   --> packages/candle/src/builders/agent_role/chat/mod.rs:58:48
    |
 58 |     fn metadata<Meta>(self, metadata: Meta) -> Self
    |                                                ^^^^
    |
   ::: packages/candle/src/builders/agent_role/traits.rs:166:48
    |
166 |     fn metadata<Meta>(self, metadata: Meta) -> impl CandleAgentBuilder
    |                                                ----------------------- return type from trait method defined here
    |
    = note: add `#[allow(refining_impl_trait)]` if it is intended for this to be part of the public API of this crate
    = note: we are soliciting feedback, see issue #121718 <https://github.com/rust-lang/rust/issues/121718> for more information
help: replace the return type so that it matches the trait
    |
 58 -     fn metadata<Meta>(self, metadata: Meta) -> Self
 58 +     fn metadata<Meta>(self, metadata: Meta) -> impl agent_role::traits::CandleAgentBuilder
    |

warning: impl trait in impl method signature does not match trait method signature
   --> packages/candle/src/builders/agent_role/chat/mod.rs:71:10
    |
 71 |     ) -> Self {
    |          ^^^^
    |
   ::: packages/candle/src/builders/agent_role/traits.rs:178:10
    |
178 |     ) -> impl CandleAgentBuilder;
    |          ----------------------- return type from trait method defined here
    |
    = note: add `#[allow(refining_impl_trait)]` if it is intended for this to be part of the public API of this crate
    = note: we are soliciting feedback, see issue #121718 <https://github.com/rust-lang/rust/issues/121718> for more information
help: replace the return type so that it matches the trait
    |
 71 -     ) -> Self {
 71 +     ) -> impl agent_role::traits::CandleAgentBuilder {
    |

warning: impl trait in impl method signature does not match trait method signature
   --> packages/candle/src/builders/agent_role/chat/mod.rs:75:36
    |
 75 |     fn tools<T>(self, tools: T) -> Self
    |                                    ^^^^
    |
   ::: packages/candle/src/builders/agent_role/traits.rs:182:36
    |
182 |     fn tools<T>(self, tools: T) -> impl CandleAgentBuilder
    |                                    ----------------------- return type from trait method defined here
    |
    = note: add `#[allow(refining_impl_trait)]` if it is intended for this to be part of the public API of this crate
    = note: we are soliciting feedback, see issue #121718 <https://github.com/rust-lang/rust/issues/121718> for more information
help: replace the return type so that it matches the trait
    |
 75 -     fn tools<T>(self, tools: T) -> Self
 75 +     fn tools<T>(self, tools: T) -> impl agent_role::traits::CandleAgentBuilder
    |

warning: impl trait in impl method signature does not match trait method signature
   --> packages/candle/src/builders/agent_role/chat/mod.rs:92:64
    |
 92 |     fn add_mcp_server_config(self, config: McpServerConfig) -> Self {
    |                                                                ^^^^
    |
   ::: packages/candle/src/builders/agent_role/traits.rs:194:64
    |
194 |     fn add_mcp_server_config(self, config: McpServerConfig) -> impl CandleAgentBuilder;
    |                                                                ----------------------- return type from trait method defined here
    |
    = note: add `#[allow(refining_impl_trait)]` if it is intended for this to be part of the public API of this crate
    = note: we are soliciting feedback, see issue #121718 <https://github.com/rust-lang/rust/issues/121718> for more information
help: replace the return type so that it matches the trait
    |
 92 -     fn add_mcp_server_config(self, config: McpServerConfig) -> Self {
 92 +     fn add_mcp_server_config(self, config: McpServerConfig) -> impl agent_role::traits::CandleAgentBuilder {
    |

warning: impl trait in impl method signature does not match trait method signature
   --> packages/candle/src/builders/agent_role/chat/mod.rs:96:50
    |
 96 |     fn on_chunk<F, Fut>(mut self, handler: F) -> Self
    |                                                  ^^^^
    |
   ::: packages/candle/src/builders/agent_role/traits.rs:198:46
    |
198 |     fn on_chunk<F, Fut>(self, handler: F) -> impl CandleAgentBuilder
    |                                              ----------------------- return type from trait method defined here
    |
    = note: add `#[allow(refining_impl_trait)]` if it is intended for this to be part of the public API of this crate
    = note: we are soliciting feedback, see issue #121718 <https://github.com/rust-lang/rust/issues/121718> for more information
help: replace the return type so that it matches the trait
    |
 96 -     fn on_chunk<F, Fut>(mut self, handler: F) -> Self
 96 +     fn on_chunk<F, Fut>(mut self, handler: F) -> impl agent_role::traits::CandleAgentBuilder
    |

warning: impl trait in impl method signature does not match trait method signature
   --> packages/candle/src/builders/agent_role/chat/mod.rs:105:56
    |
105 |     fn on_tool_result<F, Fut>(mut self, handler: F) -> Self
    |                                                        ^^^^
    |
   ::: packages/candle/src/builders/agent_role/traits.rs:205:52
    |
205 |     fn on_tool_result<F, Fut>(self, handler: F) -> impl CandleAgentBuilder
    |                                                    ----------------------- return type from trait method defined here
    |
    = note: add `#[allow(refining_impl_trait)]` if it is intended for this to be part of the public API of this crate
    = note: we are soliciting feedback, see issue #121718 <https://github.com/rust-lang/rust/issues/121718> for more information
help: replace the return type so that it matches the trait
    |
105 -     fn on_tool_result<F, Fut>(mut self, handler: F) -> Self
105 +     fn on_tool_result<F, Fut>(mut self, handler: F) -> impl agent_role::traits::CandleAgentBuilder
    |

warning: impl trait in impl method signature does not match trait method signature
   --> packages/candle/src/builders/agent_role/chat/mod.rs:114:62
    |
114 |     fn on_conversation_turn<F, Fut>(mut self, handler: F) -> Self
    |                                                              ^^^^
    |
   ::: packages/candle/src/builders/agent_role/traits.rs:212:58
    |
212 |     fn on_conversation_turn<F, Fut>(self, handler: F) -> impl CandleAgentBuilder
    |                                                          ----------------------- return type from trait method defined here
    |
    = note: add `#[allow(refining_impl_trait)]` if it is intended for this to be part of the public API of this crate
    = note: we are soliciting feedback, see issue #121718 <https://github.com/rust-lang/rust/issues/121718> for more information
help: replace the return type so that it matches the trait
    |
114 -     fn on_conversation_turn<F, Fut>(mut self, handler: F) -> Self
114 +     fn on_conversation_turn<F, Fut>(mut self, handler: F) -> impl agent_role::traits::CandleAgentBuilder
    |

warning: impl trait in impl method signature does not match trait method signature
   --> packages/candle/src/builders/agent_role/chat/mod.rs:123:78
    |
123 |     fn conversation_history(self, _history: impl ConversationHistoryArgs) -> Self {
    |                                                                              ^^^^
    |
   ::: packages/candle/src/builders/agent_role/traits.rs:220:77
    |
220 |     fn conversation_history(self, history: impl ConversationHistoryArgs) -> impl CandleAgentBuilder;
    |                                                                             ----------------------- return type from trait method defined here
    |
    = note: add `#[allow(refining_impl_trait)]` if it is intended for this to be part of the public API of this crate
    = note: we are soliciting feedback, see issue #121718 <https://github.com/rust-lang/rust/issues/121718> for more information
help: replace the return type so that it matches the trait
    |
123 -     fn conversation_history(self, _history: impl ConversationHistoryArgs) -> Self {
123 +     fn conversation_history(self, _history: impl ConversationHistoryArgs) -> impl agent_role::traits::CandleAgentBuilder {
    |

Some errors have detailed explanations: E0282, E0308, E0412, E0422, E0433.
For more information about an error, try `rustc --explain E0282`.
warning: `cyrup_candle` (lib) generated 18 warnings
error: could not compile `cyrup_candle` (lib) due to 19 previous errors; 18 warnings emitted
